#!/bin/bash
VCN=`nslookup mapr-datanode-1 | grep Name | gawk '{print $2}' | cut -d '.' -f 2-5`
bastion=`nslookup mapr-bastion | grep Name | gawk '{print $2}'`

out=/opt/mapr/installer/mapr_advanced.yaml
#out=/home/opc/mapr.yaml

make_yaml () {
echo "environment:" > $out
echo "  mapr_core_version: 6.0.1" >> $out
echo "config:" >> $out
echo "  hosts:" >> $out
echo "    - $bastion" >> $out
for host in `cat host_list`; do 
	echo "    - $host" >> $out
done;
echo "  ssh_id: root" >> $out
echo "  ssh_key_file: /home/mapr/.ssh/id_rsa" >> $out
echo "  license_type: M5" >> $out
echo "  mep_version: 5.0.0" >> $out
echo "  disks: []" >> $out
echo "  cluster_name: mapr-cluster.$VCN" >> $out
echo "  services:" >> $out
echo "    template-05-converged:" >> $out
echo "    mapr-hivemetastore:" >> $out
echo "      database:" >> $out
echo "        name: hive" >> $out
echo "        user: hive" >> $out
echo "        password: mapr" >> $out
echo "    mapr-grafana:" >> $out
echo "    mapr-opentsdb:" >> $out
echo "    mapr-collectd:" >> $out
echo "groups:" >> $out
echo "  - hosts:" >> $out
for host in `cat host_list | head -n3`; do 
	echo "    - $host" >> $out
done;
echo "    label: CONTROL" >> $out
echo "    services:" >> $out
echo "    - mapr-cldb" >> $out
echo "    - mapr-zookeeper" >> $out
echo "    - mapr-core" >> $out
echo "    - mapr-apiserver" >> $out
echo "  - hosts:" >> $out
echo "    - mapr-datanode-2.$VCN" >> $out
echo "    - mapr-datanode-3.$VCN" >> $out
echo "    label: MULTI_MASTER" >> $out
echo "    services:" >> $out
echo "    - mapr-webserver" >> $out
echo "    - mapr-resourcemanager" >> $out
echo "  - hosts:" >> $out
echo "    - mapr-datanode-1.$VCN" >> $out
echo "    label: MASTER" >> $out
echo "    services:" >> $out
echo "    - mapr-hivewebhcat" >> $out
echo "    - mapr-hiveserver2" >> $out
echo "    - mapr-hue" >> $out
echo "    - mapr-historyserver" >> $out
echo "    - mapr-hivemetastore" >> $out
echo "    - mapr-grafana" >> $out
echo "    - mapr-hbasethrift" >> $out
echo "    - mapr-spark-historyserver" >> $out
echo "    - mapr-oozie" >> $out
echo "    - mapr-httpfs" >> $out
echo "    - mapr-gateway" >> $out
echo "    - mapr-librdkafka" >> $out
echo "    - mapr-spark-thriftserver" >> $out
echo "    - mapr-qs" >> $out
echo "  - hosts:" >> $out
for host in `cat host_list | head -n3`; do
        echo "    - $host" >> $out
done;
echo "    label: MONITORING_MASTER" >> $out
echo "    services:" >> $out
echo "    - mapr-opentsdb" >> $out
echo "  - hosts:" >> $out
for host in `cat host_list`; do 
        echo "    - $host" >> $out
done;
echo "    label: DATA" >> $out
echo "    services:" >> $out
echo "    - mapr-hbase-rest" >> $out
echo "    - mapr-drill" >> $out
echo "    - mapr-nodemanager" >> $out
echo "    - mapr-fileserver" >> $out
echo "    - mapr-nfs" >> $out
echo "  - hosts:" >> $out
echo "    - $bastion" >> $out
echo "    label: CLIENT" >> $out
echo "    services:" >> $out
echo "    - mapr-core" >> $out
echo "    - mapr-hive-client" >> $out
echo "    - mapr-hbase" >> $out
echo "    - mapr-asynchbase" >> $out
echo "    - mapr-spark-client" >> $out
echo "    - mapr-kafka" >> $out
echo "  - hosts:" >> $out
for host in `cat host_list`; do
        echo "    - $host" >> $out
done; 
echo "    label: DEFAULT" >> $out
echo "    services:" >> $out
echo "    - mapr-core" >> $out
echo "    - mapr-collectd" >> $out
echo "    - mapr-data-access-gateway" >> $out
echo "hosts:" >> $out
for host in `cat datanodes`; do   
	echo "  - id: $host" >> $out
	echo "    disks:" >> $out
	nvme_chk=`cat /tmp/disk_info | grep nvme`
	nvme_chk=`echo -e $?`
	if [ $nvme_chk = "0" ]; then 
		for disk in `cat /tmp/disk_info | grep nvme`; do 
			echo "      /dev/$disk:" >> $out
		done;
	else
                for disk in `cat /tmp/disk_info | grep nvme`; do
                        echo "      /dev/$disk:" >> $out
                done;
	fi
done;
}

make_yaml
chown mapr:mapr $out

